///////////////////////////////////////////////////////////////////////////////////////////////////
//
// Запуск тестирования через фреймворк vanessa-behavior
//
// Пример строки запуска:
// 	oscript src/main.os vanessa --pathvanessa ".\vanessa-behavior\vanessa-behavior.epf" --ibconnection /F./build/ib --vanessasettings ./examples\.vb-conf.json
// 
// TODO добавить фичи для проверки команды
// 
// Служебный модуль с набором методов работы с командами приложения
//
// Структура модуля реализована в соответствии с рекомендациями 
// oscript-app-template (C) EvilBeaver
//
///////////////////////////////////////////////////////////////////////////////////////////////////

#Использовать logos
#Использовать v8runner
#Использовать asserts
#Использовать json
#Использовать vanessa-behavior

Перем Лог;
Перем МенеджерКонфигуратора;

///////////////////////////////////////////////////////////////////////////////////////////////////
// Прикладной интерфейс

Процедура ЗарегистрироватьКоманду(Знач ИмяКоманды, Знач Парсер) Экспорт

	ТекстОписания = 
		"     Запуск тестирования через фреймворк ADD.vanessa-behavior
		|     ";

	ОписаниеКоманды = Парсер.ОписаниеКоманды(ИмяКоманды, 
		ТекстОписания);

	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "--pathvanessa", 
		"[env RUNNER_PATHVANESSA] путь к внешней обработке, по умолчанию vendor/vanessa-behavior/vanessa-behavior.epf
		|           или переменная окружения RUNNER_PATHVANESSA");

	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "--vanessasettings", 
		"[env RUNNER_VANESSASETTINGS] путь к файлу настроек");
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "--workspace", 
		"[env RUNNER_WORKSPACE] путь к папке, относительно которой будут определятся макросы $workspace.
		|                 по умолчанию текущий.");
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "--additional", 
		"Дополнительные параметры для запуска предприятия.");
	Парсер.ДобавитьПараметрФлагКоманды(ОписаниеКоманды, "--no-wait", 
		"Не ожидать завершения запущенной команды/действия");

	Парсер.ДобавитьКоманду(ОписаниеКоманды);
	
КонецПроцедуры // ЗарегистрироватьКоманду

// Выполняет логику команды
// 
// Параметры:
//   ПараметрыКоманды - Соответствие - Соответствие ключей командной строки и их значений
//   ДополнительныеПараметры (необязательно) - Соответствие - дополнительные параметры
//
Функция ВыполнитьКоманду(Знач ПараметрыКоманды, Знач ДополнительныеПараметры = Неопределено) Экспорт

	Попытка
		Лог = ДополнительныеПараметры.Лог;
	Исключение
		Лог = Логирование.ПолучитьЛог(ПараметрыСистемы.ИмяЛогаСистемы());
	КонецПопытки;

	ДанныеПодключения = ПараметрыКоманды["ДанныеПодключения"];

	ЗапускатьТолстыйКлиент = ОбщиеМетоды.УказанПараметрТолстыйКлиент(ПараметрыКоманды["--ordinaryapp"], Лог);
	ОжидатьЗавершения = Не ПараметрыКоманды["--no-wait"];
	МенеджерКонфигуратора = Новый МенеджерКонфигуратора;
	МенеджерКонфигуратора.Инициализация(
		ДанныеПодключения.СтрокаПодключения, ДанныеПодключения.Пользователь, ДанныеПодключения.Пароль,
		ПараметрыКоманды["--v8version"], ,
		ДанныеПодключения.КодЯзыка, ДанныеПодключения.КодЯзыкаСеанса
	);
	Попытка
		ЗапуститьТестироватьПоведение(ОбщиеМетоды.ПолныйПуть(ПараметрыКоманды["--workspace"]),
			ОбщиеМетоды.ПолныйПуть(ПараметрыКоманды["--vanessasettings"]), 
			ОбщиеМетоды.ПолныйПуть(ПараметрыКоманды["--pathvanessa"]),
			ЗапускатьТолстыйКлиент, ОжидатьЗавершения,
			ПараметрыКоманды["--additional"]
			);

	Исключение
		МенеджерКонфигуратора.Деструктор();
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;

	МенеджерКонфигуратора.Деструктор();
	
	Возврат МенеджерКомандПриложения.РезультатыКоманд().Успех;
КонецФункции // ВыполнитьКоманду

// Выполняем запуск тестов для vannessa 
//
//	Параметры:
//		РабочийКаталогПроекта - <Строка> - Путь к каталогу с проектом, по умолчанию каталог ./
//		ПутьКНастройкам - <Строка> - Путь к файлу настроек запуска тестов
//		ПутьКИнструментам - <Строка> - пут Булево, Неопределеноь к инструментам, по умолчанию ./vendor/vanessa-behavior
//		ТолстыйКлиент - Булево, Неопределено - признак запуска толстого клиента
//		ОжидатьЗавершения - <Булево> - признак запуска ожидания, пока 1С завершиться, 
//				для разработки освобождения командной строки надо ставить Ложь;
//		ДопПараметры - <Строка> - дополнительные параметры для передачи в параметры запуска 1с, например /DebugURLtcp://localhost
//
Процедура ЗапуститьТестироватьПоведение(Знач РабочийКаталогПроекта = Неопределено, 
										Знач ПутьКНастройкам = "", Знач ПутьКИнструментам="", Знач ТолстыйКлиент = Ложь, 
										Знач ОжидатьЗавершения = Истина, Знач ДопПараметры="") 

	Лог.Информация("Тестирую поведение с помощью фреймворка vanessa-behavior");

	Если РабочийКаталогПроекта = Неопределено Тогда 
		РабочийКаталогПроекта = "./";
	КонецЕсли;
	РабочийКаталогПроекта = ОбщиеМетоды.ПолныйПуть(РабочийКаталогПроекта);
	
	Если ПустаяСтрока(ПутьКИнструментам) Тогда
		ПутьКИнструментам = Ванесса.ПутьВанесса();
		Лог.Отладка("Не задан путь к запускателю bdd-тестов. Использую путь по умолчанию %1", ПутьКИнструментам);
	КонецЕсли;

	ПутьКИнструментам = ОбщиеМетоды.ПолныйПуть(ПутьКИнструментам);
	Лог.Отладка("Путь к запускателю bdd-тестов. %1", ПутьКИнструментам);

	ФайлСуществует = Новый Файл(ПутьКИнструментам).Существует();
	Ожидаем.Что(ФайлСуществует, СтрШаблон("Ожидаем, что файл <%1> существует, а его нет!", ПутьКИнструментам)).ЭтоИстина();

	НастройкиДля1С.ДобавитьШаблоннуюПеременную("workspaceRoot", РабочийКаталогПроекта);

	Настройки = НастройкиДля1С.ПрочитатьНастройки(ПутьКНастройкам);

	ПутьКФайлуСтатусаВыполнения = НастройкиДля1С.ПолучитьНастройку(Настройки, "ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев", 
								"./build/buildstatus.log", РабочийКаталогПроекта, "путь к файлу статуса выполнения");

	ПутьЛогаВыполненияСценариев = НастройкиДля1С.ПолучитьНастройку(Настройки, "ИмяФайлаЛогВыполненияСценариев", 
								"./build/vanessaonline.txt", РабочийКаталогПроекта, "путь к лог-файлу выполнения");

	КлючЗапуска = """StartFeaturePlayer;VBParams=" + ПутьКНастройкам +";workspaceRoot=" + РабочийКаталогПроекта + """";
	Лог.Отладка(КлючЗапуска);

	ДополнительныеКлючи = " /TESTMANAGER " + ДопПараметры;

	МенеджерКонфигуратора.ЗапуститьВРежимеПредприятияСПроверкойВыполнения(
		"ЗапуститьТестироватьПоведение",
		КлючЗапуска, ПутьКИнструментам, 
		ТолстыйКлиент, ДополнительныеКлючи, ОжидатьЗавершения,
		ПутьЛогаВыполненияСценариев, ПутьКФайлуСтатусаВыполнения);
	
	Лог.Информация("Тестирование поведения завершено");

КонецПроцедуры // ЗапуститьТестироватьПоведение()
